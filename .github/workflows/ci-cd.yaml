name: Estuary Config Encryption CI/CD

# Controls when the action will run. Triggers the workflow on push
# or pull request events, but only for the primary branch.
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  testAndDeploy:
    runs-on: ubuntu-20.04
    # Permissions required of the Github token in order for
    # federated identity and authorization to work.
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Set up Google Cloud SDK
        id: auth
        uses: google-github-actions/auth@v0
        with:
          token_format: 'access_token'
          service_account: cd-config-encryption@estuary-control.iam.gserviceaccount.com
          workload_identity_provider: projects/1084703453822/locations/global/workloadIdentityPools/github-actions/providers/github-actions-provider

      - name: Fetch sops binary
        run: ./fetch-sops.sh

      - name: Test
        # test with --release so that we can re-use compilation output in the next step
        run: 'PATH="$PATH:$(pwd)/sops-bin" cargo test --release'
      - name: Build binary
        run: 'cargo build --release'

      - name: Login to GAR
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v2
        with:
          registry: us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and push
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: us-central1-docker.pkg.dev/estuary-control/config-encryption:latest

      - name: Deploy
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          gcloud run deploy config-encryption \
            --project estuary-control \
            --region us-central1 \
            --image us-central1-docker.pkg.dev/estuary-control/config-encryption:latest

